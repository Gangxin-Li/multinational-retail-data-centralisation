SELECT MAX(LENGTH(card_number)) FROM orders_table;
SELECT MAX(LENGTH(store_code)) FROM orders_table;
SELECT MAX(LENGTH(product_code)) FROM orders_table;
ALTER TABLE orders_table
	ALTER COLUMN date_uuid TYPE UUID
	USING date_uuid::uuid,
	ALTER COLUMN user_uuid TYPE UUID
	USING user_uuid::uuid,
	ALTER COLUMN card_number TYPE VARCHAR(19),
	ALTER COLUMN store_code TYPE VARCHAR(12),
	ALTER COLUMN product_code TYPE VARCHAR(11),
	ALTER COLUMN product_quantity TYPE SMALLINT;

SELECT MAX(LENGTH(country_code)) FROM dim_users

ALTER TABLE dim_users
	ALTER COLUMN first_name TYPE VARCHAR(255),
	ALTER COLUMN last_name TYPE VARCHAR(255),
	ALTER COLUMN date_of_birth TYPE DATE,
	ALTER COLUMN country_code TYPE VARCHAR(3),
	ALTER COLUMN user_uuid TYPE UUID
	USING user_uuid::uuid,
	ALTER COLUMN join_date TYPE DATE;

SELECT * FROM dim_store_details;
ALTER TABLE dim_store_details  
DROP COLUMN lat;

SELECT MAX(LENGTH(store_code)) FROM dim_store_details;
SELECT MAX(LENGTH(country_code)) FROM dim_store_details;

DELETE FROM dim_store_details 
WHERE latitude = 'O7NF1FZ74Y';
DELETE FROM dim_store_details 
WHERE longitude = 'O7NF1FZ74Y';
DELETE FROM dim_store_details 
WHERE staff_numbers ~ '[a-zA-Z]';
DELETE FROM dim_store_details 
WHERE longitude = 'Q1TJY8H1ZH';

ALTER TABLE dim_store_details
	ALTER COLUMN longitude TYPE FLOAT
	USING longitude::double precision,
	ALTER COLUMN locality TYPE VARCHAR(255),
	ALTER COLUMN store_code TYPE VARCHAR(12),
	ALTER COLUMN staff_numbers TYPE SMALLINT
	USING staff_numbers::smallint,
	ALTER COLUMN store_type TYPE VARCHAR(255),
	ALTER COLUMN country_code TYPE VARCHAR(10),
	ALTER COLUMN continent TYPE VARCHAR(255),
	ALTER COLUMN latitude TYPE FLOAT
	USING latitude::double precision;

SELECT * FROM dim_products;

UPDATE dim_products
	SET product_price = REPLACE(product_price, 'Â£', '');
	
DELETE FROM dim_products 
WHERE product_name is NULL;

ALTER TABLE dim_products
	ADD COLUMN weight_class VARCHAR(20);

UPDATE dim_products
SET weight_class = CASE 
	WHEN ml < 20 THEN 'Light'
	WHEN ml > 30 AND ml < 400 THEN 'Mid_Sized'
	WHEN ml > 410 AND ml < 1400 THEN 'Heavy'
	WHEN ml > 1410 THEN 'Truck_Required'
END 

ALTER TABLE dim_products
	RENAME removed TO still_available;

SELECT MAX(LENGTH(EAN)) FROM dim_products;
SELECT MAX(LENGTH(product_code)) FROM dim_products;
SELECT MAX(LENGTH(weight_class)) FROM dim_products;
-- Wrong here
UPDATE dim_products
SET still_available = CASE 
	WHEN still_available = 'Still_available' THEN 1
	ELSE 0
END 

DELETE FROM dim_products
WHERE product_price ~ '[a-zA-Z]';

ALTER TABLE dim_products
	ALTER COLUMN product_price TYPE FLOAT
	USING product_price::double precision,
	ALTER COLUMN weightg TYPE FLOAT
	USING weightg::double precision,
	ALTER COLUMN product_code TYPE VARCHAR(11),
	ALTER COLUMN date_added TYPE DATE
	USING date_added::date,
	ALTER COLUMN uuid TYPE UUID
	USING uuid::uuid,
	ALTER COLUMN weight_class TYPE VARCHAR(14),
	ALTER COLUMN still_available TYPE BOOL
	USING still_available::boolean;

SELECT MAX(LENGTH(month)) FROM dim_date_times
SELECT MAX(LENGTH(year)) FROM dim_date_times
SELECT MAX(LENGTH(day)) FROM dim_date_times
SELECT MAX(LENGTH(time_period)) FROM dim_date_times

SELECT * FROM dim_date_times
DELETE FROM dim_date_times
WHERE year ~ '[a-zA-Z]';

ALTER TABLE dim_date_times
	ALTER COLUMN month TYPE CHAR(10),
	ALTER COLUMN year TYPE CHAR(10),
	ALTER COLUMN day TYPE CHAR(10),
	ALTER COLUMN time_period TYPE CHAR(10),
	ALTER COLUMN date_uuid TYPE UUID
	USING date_uuid::uuid;
	
SELECT * FROM dim_card_details

SELECT MAX(LENGTH(card_number)) FROM dim_card_details
SELECT MAX(LENGTH(expiry_date)) FROM dim_card_details

DELETE FROM dim_card_details
WHERE date_payment_confirmed = 'NULL';

DELETE FROM dim_card_details
WHERE date_payment_confirmed ~ '[a-zA-Z]';


ALTER TABLE dim_card_details
	ALTER COLUMN card_number TYPE CHAR(22),
	ALTER COLUMN expiry_date TYPE CHAR(10),
	ALTER COLUMN date_payment_confirmed TYPE DATE
	USING date_payment_confirmed::date;

-- ADD Primary KEY
SELECT * FROM orders_table
SELECT * FROM dim_card_details
ALTER TABLE dim_card_details ADD PRIMARY KEY (index);
SELECT * FROM dim_date_times
ALTER TABLE dim_date_times ADD PRIMARY KEY (date_uuid);
SELECT * FROM dim_store_details
ALTER TABLE dim_store_details ADD PRIMARY KEY (store_code);
SELECT * FROM dim_users
ALTER TABLE dim_users ADD PRIMARY KEY (user_uuid);
-- ADD Foreign key
SELECT * FROM orders_table
WHERE card_number = '4971858637664480'

ALTER TABLE orders_table
--     ADD CONSTRAINT fk_orders_card FOREIGN KEY (index) REFERENCES dim_card_details (index),
	ADD CONSTRAINT fk_orders_date FOREIGN KEY (date_uuid) REFERENCES dim_date_times (date_uuid),
	ADD CONSTRAINT fk_orders_store FOREIGN KEY (store_code) REFERENCES dim_store_details (store_code),
	ADD CONSTRAINT fk_orders_user FOREIGN KEY (user_uuid) REFERENCES dim_users (user_uuid);
	